@page "/Cars"
@rendermode RenderMode.InteractiveServer
@using CarManager.Contracts
@using HalloBlazor.Data
@inject ICarService carService;
@inject IJSRuntime jsRuntime;

<h3>Cars</h3>
<button @onclick="@CreateDemoDatenAndLoadCarsFromRepo">Create Demo Daten</button>

<table>
    <thead>
        <tr>
            <th>Id</th>
            <th>Hersteller</th>
            <th>Modell</th>
            <th>Leisung [KW]</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var car in cars)
        {
            <tr>
                <td>@car.Id</td>
                <td>@car.Manufacturer</td>
                <td>@car.Model</td>
                <td>@car.KW</td>
                <td><button @onclick="(()=>RemoveCar(car))">Kill</button></td>
            </tr>
        }
    </tbody>
</table>

@code {
    IEnumerable<Car> cars;

    protected override void OnInitialized()
    {
        LoadCars();
    }

    void LoadCars()
    {
        cars = carService.GetCars();
    }

    public void CreateDemoDatenAndLoadCarsFromRepo()
    {
        carService.CreateDemoAndSaveDemoData();
        cars = carService.GetCars();
    }

    public void RemoveCars()
    {
        cars = cars.Where(x => x.Id != 0);
    }

    public async void RemoveCar(Car car)
    {
        try
        {
            carService.KillCar(car);
            LoadCars();
        }
        catch (Exception ex)
        {
            await jsRuntime.InvokeVoidAsync("alert",$"Error: {ex.Message}");
        }
    }

}
